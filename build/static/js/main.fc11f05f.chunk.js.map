{"version":3,"sources":["redux/reducers/user.js","redux/reducers/index.js","redux/actionTypes.js","redux/store.js","pages/Login.js","pages/Home.js","pages/Register.js","redux/actions.js","utils/commonUtils.js","components/PageHeader.js","App.js","index.js"],"names":["initialState","Immutable","fromJS","user","loading","combineReducers","state","arguments","length","undefined","action","type","set","data","createStore","rootReducer","applyMiddleware","thunk","FormItem","form_default","a","Item","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","axios","post","username","password","then","res","window","location","href","catch","response","status","message_default","error","getFieldDecorator","this","react_default","createElement","onSubmit","className","rules","required","message","input_default","prefix","icon_default","style","color","placeholder","button_default","htmlType","Link","to","React","PureComponent","WrappedForm","create","Home","connect","Register","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","success","setState","redirectToLogin","validateToNextPassword","rule","value","callback","confirmDirty","force","compareToFirstPassword","getFieldValue","handleConfirmBlur","target","Redirect","Register_FormItem","label","validator","onBlur","setUser","setUserLoading","fetchUser","dispatch","renderIf","flag","viewContent","SubMenu","menu_default","Header","PageHeader","correctSelectedMenu","path","pathname","selectedKeys","split","console","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","onLogout","get","getIn","theme","mode","lineHeight","key","float","title","role","onClick","withRouter","Content","Footer","App","actions","spin_default","size","layout_default","components_PageHeader","padding","background","minHeight","marginTop","Route","exact","component","textAlign","bindActionCreators","ReactDOM","render","es","store","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fc11f05f.chunk.js","sourcesContent":["import * as types from '../actionTypes';\r\nimport Immutable from 'immutable';\r\n\r\nconst initialState = Immutable.fromJS({\r\n  user: null,\r\n  loading: false\r\n});\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case types.SET_USER: {\r\n      return state.set('user', action.data);\r\n    }\r\n    case types.SET_USER_LOADING: {\r\n      return state.set('loading', action.data);\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {combineReducers} from 'redux';\r\nimport user from './user';\r\n\r\nexport default combineReducers({user});\r\n","export const SET_USER = 'SET_USER';\r\nexport const SET_USER_LOADING = 'SET_USER_LOADING';\r\n","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nexport default createStore(\r\n  rootReducer,\r\n  applyMiddleware(thunk)\r\n);\r\n","import React from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from 'react-router-dom';\r\nimport {Form, Icon, Input, Button, message} from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends React.PureComponent {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        axios.post('/api/auth/login', {\r\n          username: values.username,\r\n          password: values.password\r\n        })\r\n          .then(res => {\r\n            window.location.href = '/';\r\n          })\r\n          .catch(err => {\r\n            if (err.response.status === 401) {\r\n              message.error('Login failed: user not exist or password incorrect.');\r\n            } else {\r\n              message.error('Login failed');\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  render () {\r\n    const {getFieldDecorator} = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <h1>Login</h1>\r\n        <FormItem>\r\n          {\r\n            getFieldDecorator('username', {\r\n              rules: [\r\n                {required: true, message: 'Please input your username!'},\r\n                {type: 'email', message: 'The input is not valid E-mail!'}\r\n              ],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                placeholder=\"Username\"\r\n              />\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem>\r\n          {\r\n            getFieldDecorator('password', {\r\n              rules: [{required: true, message: 'Please input your Password!'}],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Or <Link to={'/register'}>sign up now!</Link>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedForm = Form.create()(Login);\r\n\r\nexport default WrappedForm;","import React, {PureComponent} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass Home extends PureComponent {\r\n  render () {\r\n    return (\r\n      <div className={'container'}>\r\n        <div className={'row'}>\r\n          <div className={'col-xs-12'}>\r\n            <p>home</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {user} = state;\r\n  return {user};\r\n};\r\n\r\nexport default connect(mapStateToProps)(Home);","import React, {PureComponent} from 'react';\r\nimport axios from 'axios';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {Form, Icon, Input, Button, message} from 'antd';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Register extends PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      confirmDirty: false,\r\n      redirectToLogin: false\r\n    };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        axios.post('/api/auth/register', {\r\n          username: values.username,\r\n          password: values.password\r\n        })\r\n          .then(res => {\r\n            message.success('Sign up success.');\r\n            this.setState({redirectToLogin: true});\r\n          })\r\n          .catch(err => {\r\n            if (err.response.status === 406) {\r\n              message.error('Sign up failed: user already exist.');\r\n            } else {\r\n              message.error('Sign up failed');\r\n            }\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], {force: true});\r\n    }\r\n    callback();\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const form = this.props.form;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const value = e.target.value;\r\n    this.setState({confirmDirty: this.state.confirmDirty || !!value});\r\n  };\r\n\r\n  render () {\r\n    if (this.state.redirectToLogin) {\r\n      return <Redirect to={'/login'}/>;\r\n    }\r\n    const {getFieldDecorator} = this.props.form;\r\n\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <h1>Sign up</h1>\r\n        <FormItem label=\"Username\">\r\n          {\r\n            getFieldDecorator('username', {\r\n              rules: [\r\n                {required: true, message: 'Please input your username!'},\r\n                {type: 'email', message: 'The input is not valid E-mail!'}\r\n              ],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"user\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                placeholder=\"Username\"\r\n              />\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"Password\">\r\n          {\r\n            getFieldDecorator('password', {\r\n              rules: [\r\n                {required: true, message: 'Please input your Password!'},\r\n                {validator: this.validateToNextPassword}\r\n              ],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n              />\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem label=\"Confirm password\">\r\n          {\r\n            getFieldDecorator('confirm', {\r\n              rules: [\r\n                {required: true, message: 'Please confirm your password!'},\r\n                {validator: this.compareToFirstPassword}\r\n              ],\r\n            })(\r\n              <Input\r\n                prefix={<Icon type=\"lock\" style={{color: 'rgba(0,0,0,.25)'}}/>}\r\n                type=\"password\"\r\n                placeholder=\"Confirm password\"\r\n                onBlur={this.handleConfirmBlur}\r\n              />\r\n            )\r\n          }\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Sign up!\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedForm = Form.create()(Register);\r\n\r\nexport default WrappedForm;","import * as types from './actionTypes';\r\nimport axios from 'axios';\r\nimport Immutable from 'immutable';\r\n\r\nexport const setUser = user => ({\r\n  type: types.SET_USER,\r\n  data: user\r\n});\r\n\r\nexport const setUserLoading = loading => ({\r\n  type: types.SET_USER_LOADING,\r\n  data: loading\r\n});\r\n\r\nexport const fetchUser = () => dispatch => {\r\n  dispatch(setUserLoading(true));\r\n  axios.post('/api/auth/current')\r\n    .then(res => {\r\n      const user = res.data;\r\n      if (user) {\r\n        dispatch(setUser(Immutable.fromJS(user)));\r\n      }\r\n      dispatch(setUserLoading(false));\r\n    });\r\n};\r\n","export function renderIf (flag) {\r\n  return function (viewContent) {\r\n    return flag ? viewContent : null;\r\n  };\r\n}","import React, {PureComponent} from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\nimport {renderIf} from './../utils/commonUtils';\r\nimport {Layout, Menu, Icon} from 'antd';\r\n\r\nconst SubMenu = Menu.SubMenu;\r\nconst {Header} = Layout;\r\n\r\nclass PageHeader extends PureComponent {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedKeys: []\r\n    };\r\n  }\r\n\r\n  correctSelectedMenu = () => {\r\n    const path = this.props.location.pathname;\r\n    if (path === '/') {\r\n      this.setState({selectedKeys: ['/']});\r\n    } else {\r\n      try {\r\n        this.setState({selectedKeys: ['/' + path.split('/')[1]]});\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    }\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    this.correctSelectedMenu();\r\n  };\r\n\r\n  componentDidUpdate = (prevProps, prevState, snapshot) => {\r\n    const prePath = prevProps.location.pathname;\r\n    const path = this.props.location.pathname;\r\n    if (prePath !== path) {\r\n      this.correctSelectedMenu();\r\n    }\r\n  };\r\n\r\n  onLogout = () => {\r\n    axios.post('/api/auth/logout')\r\n      .then(res => {\r\n        window.location.href = '/';\r\n      });\r\n  };\r\n\r\n  render () {\r\n    const user = this.props.user.get('user');\r\n    const username = this.props.user.getIn(['user', 'username'], '');\r\n\r\n    return (\r\n      <Header>\r\n        <div className=\"logo\"/>\r\n        <Menu theme=\"dark\" mode=\"horizontal\" selectedKeys={this.state.selectedKeys}\r\n              style={{lineHeight: '64px'}}>\r\n          <Menu.Item key=\"/\">\r\n            <Link to={'/'}>Home</Link>\r\n          </Menu.Item>\r\n          {\r\n            renderIf(user)(\r\n              <SubMenu\r\n                style={{float: 'right'}}\r\n                title={(\r\n                  <span>\r\n                      <span>Welcome, {username}&nbsp;</span>\r\n                      <Icon type=\"caret-down\" theme=\"outlined\"/>\r\n                    </span>\r\n                )}\r\n              >\r\n                <Menu.Item key=\"/logout\">\r\n                  <a role={'button'} onClick={this.onLogout}>Logout</a>\r\n                </Menu.Item>\r\n              </SubMenu>\r\n            )\r\n          }\r\n          {\r\n            renderIf(!user)(\r\n              <Menu.Item key=\"/login\" style={{float: 'right'}}>\r\n                <Link to={'/login'}>Login</Link>\r\n              </Menu.Item>\r\n            )\r\n          }\r\n        </Menu>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {user} = state;\r\n  return {user};\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(PageHeader));\r\n","import React, {PureComponent} from 'react';\r\nimport {Route, withRouter} from 'react-router-dom';\r\nimport {bindActionCreators} from 'redux';\r\nimport {connect} from 'react-redux';\r\nimport Login from './pages/Login';\r\nimport Home from './pages/Home';\r\nimport Register from './pages/Register';\r\nimport {Layout, Spin} from 'antd';\r\nimport * as actions from './redux/actions';\r\nimport PageHeader from './components/PageHeader';\r\n\r\nconst {Content, Footer} = Layout;\r\n\r\nclass App extends PureComponent {\r\n  componentDidMount = () => {\r\n    this.props.actions.fetchUser();\r\n  };\r\n\r\n  render () {\r\n    const loading = this.props.user.get('loading');\r\n\r\n    if (loading) {\r\n      return (\r\n        <div className={'loading-container'}>\r\n          <Spin size=\"large\"/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Layout className=\"layout\">\r\n        <PageHeader/>\r\n        <Content style={{padding: '0 50px'}}>\r\n          <div style={{background: '#fff', padding: 24, minHeight: 280, marginTop: 50}}>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <Route exact path=\"/register\" component={Register}/>\r\n          </div>\r\n        </Content>\r\n        <Footer style={{textAlign: 'center'}}>\r\n          React Node Starter\r\n        </Footer>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  const {user} = state;\r\n  return {user};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    actions: bindActionCreators(actions, dispatch)\r\n  };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from 'react-redux';\r\nimport store from './redux/store';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'));\r\n"],"sourceRoot":""}